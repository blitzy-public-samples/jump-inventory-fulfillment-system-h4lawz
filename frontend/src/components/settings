import React, { useState } from 'react';
import { useAppDispatch } from 'frontend/src/store/hooks';
import { updateApiConfigAsync } from 'frontend/src/store/slices/settingsSlice';

// HUMAN ASSISTANCE NEEDED
// This component requires additional work to be production-ready.
// Please review and enhance the following areas:
// - Form validation
// - Error handling
// - Security measures for sensitive data
// - Accessibility improvements
// - Responsive design

const ApiConfigForm: React.FC = () => {
  const dispatch = useAppDispatch();
  const [apiKey, setApiKey] = useState('');
  const [apiEndpoint, setApiEndpoint] = useState('');
  const [message, setMessage] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await dispatch(updateApiConfigAsync({ apiKey, apiEndpoint }));
      setMessage('API configuration updated successfully');
    } catch (error) {
      setMessage('Error updating API configuration');
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>API Configuration</h2>
      <div>
        <label htmlFor="apiKey">API Key:</label>
        <input
          type="password"
          id="apiKey"
          value={apiKey}
          onChange={(e) => setApiKey(e.target.value)}
          required
        />
      </div>
      <div>
        <label htmlFor="apiEndpoint">API Endpoint:</label>
        <input
          type="url"
          id="apiEndpoint"
          value={apiEndpoint}
          onChange={(e) => setApiEndpoint(e.target.value)}
          required
        />
      </div>
      <button type="submit">Update API Configuration</button>
      {message && <p>{message}</p>}
    </form>
  );
};

export default ApiConfigForm;